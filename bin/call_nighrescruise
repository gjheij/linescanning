#!/usr/bin/env python

from nighres.cortex import cruise_cortex_extraction
import sys, getopt
import os

def main(argv):

    """
---------------------------------------------------------------------------------------------------
call_nighrescruise

Segments the cortex from a whole brain segmented data set with the CRUISE method (includes customized
partial voluming corrections and the Anatomically-Consistent Enhancement (ACE) of sulcal fundi).
Note that the main input images are generated by the nighres module

Args:
    -m (--mask=)         white matter mask from "extract regions"
    -w (--wm=)           white matter probabilities from "extract regions"
    -g (--gm=)           gray matter probabilities from "extract regions"
    -c (--csf=)          csf probabilities from "extract regions"
    -d (--outputdir)     output directory
    -n (--name=)         basename for output

Outputs:
    (taken from https://nighres.readthedocs.io/en/latest/cortex/cruise_cortex_extraction.html)
    Dictionary collecting outputs under the following keys (suffix of output files in brackets)

    cortex (niimg):     Hard segmentation of the cortex with labels background=0, gm=1, and wm=2 (_cruise_cortex)
    gwb (niimg):        Gray-White matter Boundary (GWB) level set function (_cruise_gwb)
    cgb (niimg):        CSF-Gray matter Boundary (CGB) level set function (_cruise_cgb)
    avg (niimg):        Central level set function, obtained as geometric average of GWB and CGB (not the middle depth
                        of the cortex, use volumetric_layering if you want accurate depth measures) (_cruise-avg)
    thickness (niimg):  Simple cortical thickness estimate: distance to the GWB and CGB surfaces, in mm (_cruise-thick)
    pwm (niimg):        Optimized WM probability, including partial volume and distant values correction (_cruise-pwm)
    pgm (niimg):        Optimized GM probability, including CSF sulcal ridges correction (_cruise_pgm)
    pcsf (niimg):       Optimized CSF probability, including sulcal ridges and vessel/dura correction (_cruise-pwm)

Example:
    python call_nighrescruise.py -m sub-001_ses-1_space-average_desc-mask_cr-wm.nii.gz
                                 -w sub-001_ses-1_space-average_desc-proba_cr-wm.nii.gz
                                 -g sub-001_ses-1_space-average_desc-proba_cr-gm.nii.gz
                                 -c sub-001_ses-1_space-average_desc-proba_cr-csf.nii.gz
                                 -d /path/to/sub-xxx/cruise
                                 -n sub-001_ses-1_space-average_desc

---------------------------------------------------------------------------------------------------

    """

    wm_mask     = ''
    wm          = ''
    gm          = ''
    csf         = ''
    output_dir  = os.path.join(os.environ['NIGHRES'], 'sub-xxx', 'cruise')
    output_base = "sub-xxx-space-mp2rage_desc"

    try:
        opts = getopt.getopt(argv,"hm:w:g:c:o:n:",["mask=", "wm=", "gm=", "csf=", "outputdir", "name="])[0]
    except getopt.GetoptError:
        print(main.__doc__)
        sys.exit(2)

    for opt, arg in opts:
        if opt == '-h':
            print(main.__doc__)
            sys.exit()
        elif opt in ("-m", "--mask"):
            wm_mask = arg
        elif opt in ("-w", "--wm"):
            wm = arg
        elif opt in ("-g", "--gm"):
            gm = arg
        elif opt in ("-c", "--csf"):
            csf = arg
        elif opt in ("-o", "--outputdir"):
            output_dir = arg
        elif opt in ("-n", "--name"):
            output_base = arg

    if len(argv) < 10:
            print("\nNOT ENOUGH ARGUMENTS SPECIFIED")
            print(main.__doc__)
            sys.exit()


    # Just plop everything in dir of segmentation
    cruise_cortex_extraction(
        init_image=wm_mask,
        wm_image=wm,
        gm_image=gm,
        csf_image=csf,
        normalize_probabilities=False,
        data_weight=0.9,
        file_name=output_base,
        save_data=True,
        output_dir=output_dir
    )

if __name__ == "__main__":
    main(sys.argv[1:])
