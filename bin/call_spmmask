#!/bin/bash
#$ -S /bin/bash
#$ -cwd
#$ -j Y
#$ -V

#---------------------------------------------------------------------------------------------------------
# Create help text
function Usage {
    cat <<USAGE

---------------------------------------------------------------------------------------------------
call_spmmask

Creates an initial brain mask based on the second inversion magnitude image. This can guide the re-
moval of noise using call_rmbackground, which enhances the result from CAT12. Uses spmBrainMask and 
myGRE_BrainMask, which should be located in the data-folder.

Args:
 -s <SPM_PATH>  path to SPM; should contain CAT12 in toolbox directory
 -l <LOG_PATH>	path to working directory, defaults to DIR_LOGS
 <input image>  input image. Can either be *.nii.gz or *.nii image. In the case of the former,
                new *.nii-file will be created alongside of the *.nii.gz file, as SPM does
                not like *.nii.gz files.
 <output image>	name of output image, including directory
 <delete tmp> 	delete intermediate files (yes/y|no/n)

Usage:
 call_spmmask inv2.nii.gz mask_inv2 y

---------------------------------------------------------------------------------------------------

USAGE
    exit 1
}

if [[ $# -lt 1 ]] ; then
  Usage >&2
  exit 1
fi

# Check for subject & session flags
while getopts l:s: argument
do
  case ${argument} in
    l)  LOG=${OPTARG}
            ;;
    s)  SPM=${OPTARG}
            ;;
  esac
done

INPUT=${@:$OPTIND:1}
OUTPUT=${@:$OPTIND+1:1}
RM=${@:$OPTIND+2:1}

#-----------------------------------------------------------------------------
# Get bash helper functions
source call_bashhelper

#-----------------------------------------------------------------------------
# Define default LOG-path
if [[ -z ${LOG} ]]; then
  if [[ -z ${DIR_LOGS} ]]; then
    LOG_DIR=${PWD}
  else
    LOG_DIR=${DIR_LOGS}
  fi
else
  LOG_DIR=${LOG}
fi

if [[ ! -d ${LOG_DIR} ]]; then
  mkdir -p ${LOG_DIR}
fi

#-----------------------------------------------------------------------------
# Define default SPM-path
if [[ -z ${SPM} ]]; then
  if [[ -z ${SPM_PATH} ]]; then
    echo "ERROR: SPM_PATH-variable is empty. Either define it, or specify an SPM-path with \"-s <path/to/spm>\""
    exit 1
  else
    SPM_PATH=${SPM_PATH}
  fi
else
  SPM_PATH=${SPM}
fi

#-----------------------------------------------------------------------------
# Get extension from input file
ext=`fetch_extension ${INPUT}`
if [[ ${ext} == "gz" ]]; then
  in_file=$(dirname ${INPUT})/$(basename ${INPUT} .gz)
  gunzip -c ${INPUT} > ${in_file}
else
  in_file=${INPUT}
fi

# if file specified is in current directory, add entire path
in_file=`fetch_filepath ${in_file}`

#-----------------------------------------------------------------------------
# Create new script
new_script=$(dirname ${in_file})/spm_mask.m
if [[ -f ${new_script} ]]; then
  rm -r ${new_script}
fi

if [[ ! -d $(dirname ${OUTPUT}) ]]; then
  mkdir -p $(dirname ${OUTPUT})
fi

make_mask_script ${SPM_PATH} ${in_file} ${new_script}
  
# call_matlab = in call_bashhelper
call_matlab ${new_script}

if [[ $? -ne 0 ]]; then
  echo "ERROR: matlab exited with non-zero status"
  exit 1
fi

if [[ ${RM} == "y" ]]; then
  rm -r $(dirname ${in_file})/c*$(basename ${in_file}) *.mat 2>/dev/null
fi

# Convert SPM's .nii-files to .nii.gz if the input file was nii.gz
if [[ ${ext} == "gz" ]]; then
  mask_img=`find $(dirname ${in_file}) -type f -name "mask_$(basename ${in_file})*" 2>/dev/null`
  if [[ ! -z ${mask_img} ]]; then
    gzip -c ${mask_img} > ${OUTPUT} 2>/dev/null

    # set qformcode to 1 (prefered by nighres)
    if [[ `fslval ${OUTPUT} qform_code` -ne 1 ]]; then
        fslorient -setqformcode 1 ${OUTPUT}
    fi
  fi
  rm -r ${in_file}
else
  mv ${mask_img} $(dirname ${OUTPUT})
fi