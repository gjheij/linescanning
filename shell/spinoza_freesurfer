#!/usr/bin/env bash

#---------------------------------------------------------------------------------------------------------
# check if there's is a setup file containing the major paths and source it if it exists
call_loadsetup

#---------------------------------------------------------------------------------------------------------
# Create help text
function Usage {
    cat <<USAGE

---------------------------------------------------------------------------------------------------
spinoza_freesurfer

Surface parcellation with FreeSurfer. We only need to specify where to look for the T1w-image which
stage we should run (default is 'all'), and where to look for a T2w-image if there is one.

General approach for segmentation:
  - Run autorecon1:   call_freesurfer -s <subj ID> -t <T1> -p <T2> -r 1)      ~an hour
  - Fix skullstrip:   call_freesurfer -s <subj ID> -o gcut                    ~10 minutes
  - Run autorecon2:   call_freesurfer -s <subj ID> -r 2                       ~few hours
  - Fix errors with:
      - norm; then run call_freesurfer -s ${PREFIX}001 -r 23 -e cp                 ~few hours
      - pia;  then run call_freesurfer -s ${PREFIX}001 -r 23 -e pial               ~few hours

You can specify in which directory to look for anatomical scans in the first argument. Usually,
this is one of the following options: DIR_DATA_HOME if we should use the T1w in the project/${PREFIX}xxx
/anat directory, or DIR_DATA_DERIV/pymp2rage to use T1w-images derived from pymp2rage, or DIR_DATA_
DERIV/masked_mp2rage to use T1w-images where the dura and sagittal sinus are masked out (should be
default!). In any case, it assumes that the file is in YOURINPUT/${PREFIX}xxx/ses-1/. If the input is
equal to the DIR_DATA_HOME variable, this will be recognize and 'anat' will be appended to YOURINPUT
/${PREFIX}xxx/ses-1/anat.

You can also specify a directory where the T2-weighted image is located. Do this the same way as de-
scribed above. To you path, ${PREFIX}xxx/ses-x will be appended if the input path is not equal to DIR_DATA
_HOME. Again, if it is, ${PREFIX}xxx/ses-x/anat will be appended as well.

Usage:
  spinoza_freesurfer <-s sub> <-n ses> <directory with anats> <stage> <T2-directory>

Example:
  spinoza_freesurfer $DIR_DATA_DERIV/masked_mp2rage all $DIR_DATA_HOME
  spinoza_freesurfer -s 001 -n 1 $DIR_DATA_ANAT all $DIR_DATA_HOME

---------------------------------------------------------------------------------------------------

USAGE
    exit 1
}

# Check for subject & session flags
OW=0
while getopts os:n: argument
do
  case ${argument} in
    s)  sub=${OPTARG}
          ;;
    n)  ses=${OPTARG}
          ;;
    o)  OW=1
          ;;          
  esac
done

if [[ $# -lt 2 ]] ; then
  Usage >&2
  exit 1
fi

T1=${@:$OPTIND:1}
STAGE=${@:$OPTIND+1:1}
T2=${@:$OPTIND+2:1}

if [[ -z ${sub} ]]; then
  # loop through subjects
  search="${T1}/${PREFIX}*"
else
  # do for 1 subject
  sub_nr=`echo ${sub} | sed -e 's/^[[:space:]]*//'`
  search="${T1}/${PREFIX}${sub_nr}"
fi

#-----------------------------------------------------------------------------
# Start clock
#-----------------------------------------------------------------------------

echo
echo "==================================================================================================="
printf "SURFACE PARCELLATION WITH FREESURFER\n"
start=`date +%s`
start_date=`date`

printf "Started at ${start_date}\n"
echo "==================================================================================================="

#-----------------------------------------------------------------------------
# Run it
for subID in ${search}; do

  # collect subject name
  if [[ ! -z ${sub} ]]; then
    sub_name=${PREFIX}${subID}
  else
    sub_name=$(basename ${subID})
  fi

  if [[ ! -z ${ses} ]]; then
    nr=`echo ${ses} | sed -e 's/^[[:space:]]*//'`
    base_path=${sub_name}/ses-${nr}
    base=${sub_name}_ses-${nr}
  else
    base_path=${sub_name}
    base=${sub_name}
  fi

  # check number of T1w-files
  T1_DIR=${T1}/${base_path}
  input_t1w=`find "${T1_DIR}" -type f \( -name "*T1w*" -and -name "*${DATA^^}*" -and -name "*.nii.gz" \) 2>/dev/null`

  ct=0; for ii in ${input_t1w[@]}; do ((ct++)); done
  if [ ${ct} -gt 1 ]; then
    echo 
    echo "---------------------------------------------------------------------------------------------------"
    echo "ERROR in `basename ${0}`: Found multiple T1w-files (${ct})"
    for ii in ${input_t1w[@]}; do echo " ${ii}"; done
    echo "Rename or delete one and rerun"
    echo 
    exit 1
  fi

  # check if we should delete subject folder (rather dangerous, really..)
  if [[ ${OW} -eq 1 ]]; then
    rm -r ${SUBJECTS_DIR}/${sub_name} 2>/dev/null
  fi

  # run if input exists
  if [[ ! -z ${input_t1w} ]]; then

    if [[ ! -d ${SUBJECTS_DIR}/${sub_name} ]]; then

      echo
      echo "**************************************** Processing ${sub_name} ***************************************"
      echo "Running FreeSurfer on `basename ${input_t1w}` with autorecon \"${STAGE}\""

      # LOOK FOR T2-/FLAIR WEIGHTED IMAGE
      if [ ! -z ${T2} ]; then
        if [[ -d ${T2}/${base_path} ]]; then

          input_t2w=`find "${T2}/${base_path}" -type f \( -name "*FLAIR*" -and -name "*.nii.gz" -or -name "*T2w*" -and -name "*.nii.gz" \) 2>/dev/null`
          if [[ ! -z ${input_t2w} ]]; then

            # throw error if multiple files are found
            ct=0; for ii in ${input_t2w[@]}; do ((ct++)); done
            if [ ${ct} -gt 1 ]; then
              echo 
              echo "---------------------------------------------------------------------------------------------------"
              echo "ERROR in `basename ${0}`: Found multiple T2w-files (${ct})"
              for ii in ${input_t2w[@]}; do echo " ${ii}"; done
              echo "Rename or delete one and rerun"
              echo 
              exit 1
            elif [ ${ct} -eq 1 ]; then
              T2_flag="-p ${input_t2w}"
            else
              echo "ERROR in `basename ${0}`: not sure what went wrong.."
              exit 1
            fi

          else
            T2_flag=""
          fi
        else
          echo "ERROR in `basename ${0}`: T2-path was given, but \"${T2}/${base_path}\" does not exist"
        fi
      else
        T2_flag=""
      fi

      # cmd
      call_freesurfer -s ${sub_name} -t ${input_t1w} -r ${STAGE} ${T2_flag} -v \"7.2.0\"

    else
      echo "${sub_name}: FreeSurfer already ran"
    fi

  else

    echo "No T1-weighted image found"
    continue

  fi

done

#-----------------------------------------------------------------------------
# Calculate time spent using 'let'
echo
echo "---------------------------------------------------------------------------------------------------"
end=`date +%s`
end_date=`date`
printf "Done at ${end_date}\n"

let deltatime=end-start
let hours=deltatime/3600
let minutes=(deltatime/60)%60
let seconds=deltatime%60
printf "Time spent: %d:%02d:%02d\n" ${hours} ${minutes} ${seconds}
echo "---------------------------------------------------------------------------------------------------"
