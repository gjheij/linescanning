#!/usr/bin/env python
#$ -q long.q@jupiter
#$ -j Y
#$ -cwd
#$ -V

from linescanning.image import massp_mask_img
import warnings
import os, getopt, sys
warnings.filterwarnings("ignore")
opj = os.path.join

def main(argv):

    """
---------------------------------------------------------------------------------------------------
call_massp2table

Convert MASSP-label image to a tabular volumetric file. 

Args:
    -l <input img>      label image
    -m <mask img>       image to which label image is applied
    -o <output file>    output tabular file

Outputs
    output file containing average across MASSP-structures given a to-be-masked image

Example:
    call_massp2table -l label.nii.gz -m t1map.nii.gz -o label.json

---------------------------------------------------------------------------------------------------
    """

    input   = None
    mask    = None
    output  = "label.json"

    try:
        opts = getopt.getopt(argv,"hl:m:o:",["label=", "out=", "mask="])[0]
    except getopt.GetoptError:
        print(main.__doc__)
        sys.exit(2)

    for opt, arg in opts:
        if opt == '-h':
            print(main.__doc__)
            sys.exit()
        elif opt in ("-l", "--label"):
            input = arg
        elif opt in ("-o", "--out"):
            output = arg
        elif opt in ("-m", "--mask"):
            mask = arg            

    if len(argv) < 2:
        print("\nNOT ENOUGH ARGUMENTS SPECIFIED")
        print(main.__doc__)
        sys.exit()


    #---------------------------------------------------------------------------------------------------
    # Convert label to volume table

    if os.path.exists(input) and os.path.exists(mask):
        vol_file = massp_mask_img(input, mask, out=output)
        # print(f"wrote {vol_file}")
    else:
        raise FileNotFoundError(f"Could not find input file or to-be-masked image")

if __name__ == "__main__":
    main(sys.argv[1:])
